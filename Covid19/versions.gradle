/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
def versionSDK = "28.0.0"
ext.deps = [:]
def versions = [:]
versions.support = versionSDK
versions.retrofit = "2.9.0"
versions.dagger = "2.24"
versions.lifecycle = "2.2.0"
versions.glide = "4.11.0"
versions.rxjava2 = "2.2.4"
versions.rx_android = "2.1.0"
versions.eventbus = "3.2.0"
versions.timber = "4.7.0"
versions.room = "2.2.5"



def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:1.0.0"
support.recyclerview = "androidx.recyclerview:recyclerview:1.0.0"
support.cardview = "androidx.cardview:cardview:1.0.0"
support.animated_vector = "androidx.vectordrawable:vectordrawable-animated:1.0.0"
support.media_compat = "androidx.media:media:1.0.0"
support.material = "com.google.android.material:material:1.0.0"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.v7 = "com.android.support:appcompat-v7:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
deps.support = support

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
kotlin.extensions = "org.jetbrains.kotlin:kotlin-android-extensions-runtime:$kotlin_version"
deps.kotlin = kotlin

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.glide_compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def rx = [:]
rx.rxandroid = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx = rx

def eventbus = [:]
eventbus.runtime = "org.greenrobot:eventbus:$versions.eventbus"
deps.eventbus = eventbus

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
deps.room = room

// others
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
ext.deps = deps





def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    def revision = 'git rev-list --max-count 1 --timestamp HEAD'.execute().text.trim()
    def gitCommitMillis = java.util.concurrent.TimeUnit.SECONDS.toMillis(revision.split(' ').first() as long)

    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return new Date(gitCommitMillis).format("ddMM") + "." + stdout.toString().trim()
}
ext.getGitHash = getGitHash
